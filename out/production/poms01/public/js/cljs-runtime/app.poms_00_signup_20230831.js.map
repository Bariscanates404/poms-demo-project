{"version":3,"sources":["app/poms_00_signup_20230831.cljc"],"mappings":"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","names":["var_args","G__88159","app.poms-00-signup-20230831/create-root","js/Error","node","app.poms_00_signup_20230831.create_root","cljs.core.gensym","id-prefix","js/module$node_modules$react_dom$client.createRoot","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","app.poms-00-signup-20230831/render","seq88160","G__88161","cljs.core/first","cljs.core/next","self__5754__auto__","root","args","reagent.core.as_element","cljs.core.into","app.poms-00-signup-20230831/get-text","editor","cljs.core.get","app.poms-00-signup-20230831/block","data","on-change","vec__88163","cljs.core.nth","js/module$node_modules$react$index.useState","js/module$node_modules$slate_react$dist$index.withReact","js/module$node_modules$slate$dist$index.createEditor","js/module$node_modules$slate_react$dist$index.Slate","value","cljs.core.println","js/module$node_modules$slate_react$dist$index.Editable","e","cljs.core._EQ_","app.poms-00-signup-20230831/data","db","cljs.core/vec","cljs.core.map","p__88166","vec__88167","?bn","?ctg","?pn","d/q","cljs.core.sort_by","cljs.core/str","app.poms-00-signup-20230831/MyComponent","js/shadow.js.shim.module$react_data_table_component$default","row","xs__31734__auto__","hyperfiddle.electric.impl.runtime.bind","hyperfiddle.electric.impl.for/map-by","cljs.core/identity","cljs.core.partial","hyperfiddle.electric.impl.compiler/%0","cljs.core.ex_info"],"sourcesContent":["(ns app.poms-00-signup-20230831\n  #?(:cljs (:require-macros [app.poms-00-signup-20230831 :refer [with-reagent]]))\n  (:require contrib.str\n            [hyperfiddle.electric :as e]\n            [hyperfiddle.electric-dom2 :as dom]\n            [hyperfiddle.electric-ui4 :as ui]\n            [clojure.string :as str]\n            #?(:clj [datomic.client.api :as d])\n            #?(:cljs [\"react\" :as react])\n            #?(:cljs [\"slate\" :refer [createEditor]])\n            #?(:cljs [\"slate-react\" :refer [Slate Editable withReact]])\n            #?(:cljs [reagent.core :as r])\n            #?(:cljs [reagent.dom :as rdom])\n            #?(:cljs [\"react-dom/client\" :as ReactDom])\n            #?(:cljs [\"react-data-table-component$default\" :as DataTable])\n            )\n  )\n\n;;- BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE ;;\n#?(:cljs (defn create-root\n           \"See https://reactjs.org/docs/react-dom-client.html#createroot\"\n           ([node] (create-root node (str (gensym))))\n           ([node id-prefix]\n            (ReactDom/createRoot node #js {:identifierPrefix id-prefix}))))\n#?(:cljs (defn render [root & args]\n           (.render root (r/as-element (into [:f>] args)))))\n(defmacro with-reagent [& args]\n  `(dom/div\n     (let [root# (create-root dom/node)]\n       (render root# ~@args)\n       (e/on-unmount #(.unmount root#)))))\n;; - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE  ;;\n\n(defn get-text [editor] (.-text (get (.-children (get (.-children editor) 0)) 0)))\n(defn block [data on-change]\n  #?(:cljs\n     (let [[editor] (react/useState (fn [] (withReact (createEditor))))]\n       [:> Slate\n        {:editor       editor\n         :initialValue [{:children\n                         [{:text (:value data)}],\n                         :type \"paragraph\"}]\n         ;; :onChange on-change also works\n         :onChange     (fn [value]\n                         (println \"onChange:\" (-> value (get 0) (.-children) (get 0) (.-text)) \".  Not a plain function\")\n                         (on-change value))}\n        [:> Editable\n         {:onKeyDown (fn [e]\n\n                       (when (= (.-key e) \"Enter\")\n                         (println \"onKeyDown: Enter, A plain function. \")\n\n                         )\n\n                       )}]])))\n;; - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE  ;;\n\n\n(defn data [db]\n  (vec (map (fn [[?bn ?ctg ?pn]]\n              {:brand-name     ?bn\n               :category       ?ctg\n               :contact-number ?pn\n               })\n            (vec (->>\n                   (d/q\n                     '[:find ?bn ?ctg ?pn\n                       :where\n                       [?id :company/id _]\n                       [?id :company/brand-name ?bn]\n                       [?id :company/category ?pr]\n                       [?pr :db/ident ?ctg]\n                       [?id :company/phonenumber ?pn]\n                       ]\n                     db)\n                   (sort-by str)\n                   )))))\n\n#?(:cljs (defn MyComponent [data] [:> DataTable {:columns #js[#js {:name \"brand-name\", :selector (fn [row] (.-brand-name row)), :sortable true}\n                                                              #js {:name \"category\", :selector (fn [row] (.-category row)), :sortable true}\n                                                              #js {:name \"contact-number\", :selector (fn [row] (.-contact-number row)), :sortable true}\n                                                              ], :data data :direction \"auto\"\n                                                 :pagination \"true\"\n                                                 }]))\n\n\n(e/for [[brand-name category phonenumber] (e/server (->>\n                                                      (d/q\n                                                        '[:find ?bn ?ctg ?pn\n                                                          :where\n                                                          [?id :company/id _]\n                                                          [?id :company/brand-name ?bn]\n                                                          [?id :company/category ?pr]\n                                                          [?pr :db/ident ?ctg]\n                                                          [?id :company/phonenumber ?pn]\n                                                          ]\n                                                        db)\n                                                      (sort-by str)\n                                                      )\n                                                    )]\n       (dom/tr\n         (dom/td (dom/text brand-name))\n         (dom/td (dom/text (case category\n                             :service/bilgisayar \"Bilgisayar\"\n                             :service/seyahat \"Seyahat\"\n                             :service/konaklama \"Konaklama\"\n                             )))\n         (dom/td (dom/text phonenumber))\n         )\n\n       )\n\n\n\n;; bu k\u0131s\u0131mda zorunlu\n(e/def conn)\n(e/def db)\n;; bu k\u0131s\u0131mda zorunlu\n(e/defn signup-page []\n        (e/server\n          (binding [conn @(requiring-resolve 'user/datomic-conn)]\n            (binding [db (d/db conn)]\n              ;bind etmek zorunday\u0131z dbyi cal\u0131st\u0131rmak i\u00e7in.\n              (e/client\n                (let [!state (atom {\n                                    :dt             (js/Date.) ;datepicker\n                                    :dt2            (js/Date.) ;datepicker\n                                    :username       \"\"\n                                    :password       \"\"\n                                    :formal-name    \"\"\n                                    :formal-surname \"\"\n                                    :brand-name     \"\"\n                                    :email          \"\"\n                                    :phonenumber    \"\"\n                                    :category       \"asd\"\n                                    })\n                      dt (get (e/watch !state) :dt)\n                      dt2 (get (e/watch !state) :dt2)\n                      category (get (e/watch !state) :category)\n                      username (get (e/watch !state) :username)\n                      password (get (e/watch !state) :password)\n                      formal-name (get (e/watch !state) :formal-name)\n                      formal-surname (get (e/watch !state) :formal-surname)\n                      brand-name (get (e/watch !state) :brand-name)\n                      email (get (e/watch !state) :email)\n                      phonenumber (get (e/watch !state) :phonenumber)\n                      ]\n                  (dom/element \"style\" (dom/text \"\n                  ul{list-style-type: none; margin: 0; padding: 0; background-color: black; overflow: auto; }\n                  li {float: left;}\n                  li a {color: white; padding: 15px 25px; display: inline-block; text-align: center; text-decoration: none;}\n                  .home {background-color: darkred;}\n                  li a:hover {\n                  background-color: #405d27;\n                  legend {font-size: 25px; font-style: italic;} p {margin-bottom: 0}\n                  }\n                  .error { color: red;display: none;}\n                  input:invalid+.error, input:invalid:out-of-range+.error {display: block;}\n                  input:valid+.error {display: none;}\n                  input:valid {border: 2px solid green;}\n                  input:focus:invalid {border: 2px solid red;}\n                  \"))\n                  (dom/ul (dom/props {:class \"ul\"})\n                          (dom/li\n                            (dom/a (dom/props {:class \"home\" :href \"http://localhost:8080/\"})\n                                   (dom/text \"Home\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-00-signup-20230831!signup-page)\"})\n                                   (dom/text \"Sign Up\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-01-login-20230828!login-page)\"})\n                                   (dom/text \"Log In\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-02-cp-20230830!create-project)\"})\n                                   (dom/text \"Create Project\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-03-crfp-20230906!create-rfp)\"})\n                                   (dom/text \"Create Rfp\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-04-sif-20230907!sif-page)\"})\n                                   (dom/text \"Supplier Information Screen\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-05-addcompany-20230907!add-company)\"})\n                                   (dom/text \"Add New Company\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-06-ph-20230915!ph-page)\"})\n                                   (dom/text \"Project Highlights\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-07-app-20230915!app-page)\"})\n                                   (dom/text \"Add New Proposal\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-08-ap-20230918!approve-proposal)\"})\n                                   (dom/text \"Approve Proposal\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-09-ot-20230920!operation-track-page)\"})\n                                   (dom/text \"Operation Track\")))\n                          )\n\n\n\n\n                  (dom/text \"henlo\")\n                  (dom/text (clj->js (e/server (data db))))\n                  (with-reagent MyComponent (clj->js (e/server (data db))))\n\n                  )\n                )\n              )\n            )\n          )\n        )\n\n"]}