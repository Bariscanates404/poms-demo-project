{"version":3,"sources":["app/poms_03_crfp_20230906.cljc"],"mappings":";;;;;AAmBS,AAAA;;;wCAAA,gDAAAA,xFAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,oEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,oEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,sEAAA,tEAAMD,iFAEFE;AAFJ,AAEU,OAACC,oEAAYD,KAAK,4CAAK,AAACE;;;AAFlC,CAAA,sEAAA,tEAAMJ,iFAGFE,KAAKG;AAHT,AAIG,4DAAA,rDAACC,gDAAoBJ,2BAA4BG;;;AAJpD,CAAA,gEAAA,hEAAML;;AAAN,AAKA,AAAA,mCAAA,2CAAAF,9EAAMc;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,sEAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,wEAAA,xEAAME,mFAAQM,KAAOC;AAArB,AACE,OAASD,YAAK,AAACE,sDAAa,6CAAA,mFAAA,hIAACC,yLAAWF;;;AAD1C,CAAA,2DAAA,3DAAMP;;AAAN;AAAA,CAAA,qDAAA,WAAAC,hEAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,AAST,iCAAA,jCAAMS,0EAAMC;AAAZ,AACE,OAACC,cAAI,AAACC,4CAAI,WAAAC;AAAA,AAAA,IAAAC,aAAAD;SAAA,AAAAE,4CAAAD,WAAA,IAAA,hEAAME;YAAN,AAAAD,4CAAAD,WAAA,IAAA,nEAASG;cAAT,AAAAF,4CAAAD,WAAA,IAAA,rEAAeI;eAAf,AAAAH,4CAAAD,WAAA,IAAA,tEAAuBK;AAAvB,AAAA,kDAAA,qDAAA,4DAAA,mEAAA,lIACYH,yDACAC,iEACAC,6DACAC;GACZ,AAACR,8EACM,IAAA,AAAA,JAACS,+mEAWCV,/qEACF,AAACW,gDAAQnB;;AAGnB,wCAAA,xCAAMoB,wFAAaC;AAAnB,AAAA,0FAAA,wGAAA,2CAAA,2DAAA,CAAA,UAAA,1KAA6BC,oMAA2D,WAAKC;AAAL,AAAU,OAAMA;gBAAxG,OAAA,UAAA,qBACmF,WAAKA;AAAL,AAAU,OAASA;gBADtG,OAAA,UAAA,uBAEqF,WAAKA;AAAL,AAAU,OAAWA;gBAF1G,OAAA,UAAA,oBAGkF,WAAKA;AAAL,AAAU,OAAQA;gBAHpG,QAAA,0DAAA,+DAAA,OAAA,kEAAA,7IAI8DF;;AA+BvE,AACA,AAMA","names":["var_args","G__81931","app.poms-03-crfp-20230906/create-root","js/Error","node","app.poms_03_crfp_20230906.create_root","cljs.core.gensym","id-prefix","js/module$node_modules$react_dom$client.createRoot","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","app.poms-03-crfp-20230906/render","seq81936","G__81937","cljs.core/first","cljs.core/next","self__5754__auto__","root","args","reagent.core.as_element","cljs.core.into","app.poms-03-crfp-20230906/data","db","cljs.core/vec","cljs.core.map","p__81941","vec__81946","cljs.core.nth","id","title","company","user","d/q","cljs.core.sort_by","app.poms-03-crfp-20230906/MyComponent","data","js/shadow.js.shim.module$react_data_table_component$default","row"],"sourcesContent":["(ns app.poms-03-crfp-20230906\n  #?(:cljs (:require-macros [app.poms-03-crfp-20230906 :refer [with-reagent]]))\n  (:require contrib.str\n            [hyperfiddle.electric :as e]\n            [hyperfiddle.electric-dom2 :as dom]\n            [hyperfiddle.electric-ui4 :as ui]\n            [clojure.string :as str]\n            #?(:clj [datomic.client.api :as d])\n            #?(:cljs [\"react\" :as react])\n            #?(:cljs [\"slate\" :refer [createEditor]])\n            #?(:cljs [\"slate-react\" :refer [Slate Editable withReact]])\n            #?(:cljs [reagent.core :as r])\n            #?(:cljs [reagent.dom :as rdom])\n            #?(:cljs [\"react-dom/client\" :as ReactDom])\n            #?(:cljs [\"react-data-table-component$default\" :as DataTable])\n            )\n  )\n\n;;- BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE ;;\n#?(:cljs (defn create-root\n           \"See https://reactjs.org/docs/react-dom-client.html#createroot\"\n           ([node] (create-root node (str (gensym))))\n           ([node id-prefix]\n            (ReactDom/createRoot node #js {:identifierPrefix id-prefix}))))\n#?(:cljs (defn render [root & args]\n           (.render root (r/as-element (into [:f>] args)))))\n(defmacro with-reagent [& args]\n  `(dom/div\n     (let [root# (create-root dom/node)]\n       (render root# ~@args)\n       (e/on-unmount #(.unmount root#)))))\n;; - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE  ;;\n\n(defn data [db]\n  (vec (map (fn [[id title company user]]\n              {:id      id\n               :title   title\n               :company company\n               :user    user})\n            (vec (->>\n                   (d/q\n                     '[:find ?pr-id ?pr-t ?pr-c ?pr-u\n                       :where\n                       [?id :project/id ?pr-id]\n                       [?id :project/project-title ?pr-t]\n                       [?id :project/client-company-id ?pr-c-i]\n                       [?pr-c-i :company/brand-name ?pr-c]\n                       [?id :project/client-user-id ?pr-u-i]\n                       [?pr-u-i :user/name ?pr-u]\n\n                       ]\n                     db)\n                   (sort-by first)\n                   )))))\n\n#?(:cljs (defn MyComponent [data] [:> DataTable {:columns #js[#js {:name \"project-id\", :selector (fn [row] (.-id row)), :sortable true}\n                                                              #js {:name \"title\", :selector (fn [row] (.-title row)), :sortable true}\n                                                              #js {:name \"company\", :selector (fn [row] (.-company row)), :sortable true}\n                                                              #js {:name \"user\", :selector (fn [row] (.-user row)), :sortable true}\n                                                              ], :data data :direction \"auto\"\n                                                 :pagination \"true\"\n                                                 }]))\n\n\n\n\n#?(:clj (defn get-free-rfp-id [db] (if (empty? (d/q\n                                                 '[:find ?e\n                                                   :where\n                                                   [_ :rfp/id ?e]]\n                                                 db)\n                                               )\n                                     1\n                                     (+ 1 (ffirst (take 1 (reverse (->> (d/q\n                                                                          '[:find ?e\n                                                                            :where\n                                                                            [_ :rfp/id ?e]]\n                                                                          db)\n                                                                        (sort-by last)\n                                                                        )\n                                                                   )\n                                                        )\n                                                  )\n                                        )\n                                     )\n          )\n   )\n\n\n;; bu k\u0131s\u0131mda zorunlu\n(e/def conn)\n(e/def db)\n;; bu k\u0131s\u0131mda zorunlu\n\n\n\n\n(e/defn create-rfp []\n        (e/server\n          (binding [conn @(requiring-resolve 'user/datomic-conn)]\n            (binding [db (d/db conn)]\n              ;bind etmek zorunday\u0131z dbyi cal\u0131st\u0131rmak i\u00e7in.\n              (e/client\n                (let [!state (atom {\n                                    :category        \"\"\n                                    :name            \"\"\n                                    :item-amount     \"\"\n                                    :explanation     \"\"\n                                    :project-id      \"\"\n                                    :btn1-is-clicked false\n                                    :login-info      \"Welcome! Colabio makes life easier...\"\n                                    })\n                      login-info (get (e/watch !state) :login-info)\n                      project-id (get (e/watch !state) :project-id)\n                      btn-state (get (e/watch !state) :btn1-is-clicked)\n                      category (get (e/watch !state) :category)\n                      name (get (e/watch !state) :name)\n                      item-amount (get (e/watch !state) :item-amount)\n                      explanation (get (e/watch !state) :explanation)\n                      rfp-id (e/server (get-free-rfp-id db))\n                      ]\n                  (dom/element \"style\" (dom/text \"\n                  ul{list-style-type: none; margin: 0; padding: 0; background-color: black; overflow: auto; }\n                  li {float: left;}\n                  li a {color: white; padding: 15px 25px; display: inline-block; text-align: center; text-decoration: none;}\n                  .home {background-color: darkred;}\n                  li a:hover {\n                  background-color: #405d27;\n                  label {font-size: 16px; margin-right: 10px;}\n                  select {font-size: 14px;padding: 5px;border: 1px solid #ccc;border-radius: 4px;}\n                  }\n                  table, th, td { border: 1px solid black; border-collapse: collapse; }\n                  \"))\n                  (dom/ul (dom/props {:class \"ul\"})\n                          (dom/li\n                            (dom/a (dom/props {:class \"home\" :href \"http://localhost:8080/\"})\n                                   (dom/text \"Home\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-00-signup-20230831!signup-page)\"})\n                                   (dom/text \"Sign Up\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-01-login-20230828!login-page)\"})\n                                   (dom/text \"Log In\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-02-cp-20230830!create-project)\"})\n                                   (dom/text \"Create Project\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-03-crfp-20230906!create-rfp)\"})\n                                   (dom/text \"Create Rfp\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-04-sif-20230907!sif-page)\"})\n                                   (dom/text \"Supplier Information Screen\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-05-addcompany-20230907!add-company)\"})\n                                   (dom/text \"Add New Company\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-06-ph-20230915!ph-page)\"})\n                                   (dom/text \"Project Highlights\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-07-app-20230915!app-page)\"})\n                                   (dom/text \"Add New Proposal\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-08-ap-20230918!approve-proposal)\"})\n                                   (dom/text \"Approve Proposal\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-09-ot-20230920!operation-track-page)\"})\n                                   (dom/text \"Operation Track\")))\n                          )\n\n                  (dom/div (dom/props {:style {:position \"relative\" :top \"50%\" :left \"0%\" :overflow \"auto\" :height \"500px\" :width \"750px\" }})\n                           (dom/p (dom/props {:style {:padding-bottom \"10px\" :padding-top \"10px\" :margin-top \"10px\" :margin-left \"10%\"}}) (dom/text \" Aktif Projeler: \"))\n                           (with-reagent MyComponent (clj->js (e/server (data db))))\n                           )\n\n                  (dom/div\n                    (dom/form\n                      (dom/props {:class \"form\"\n                                  :il    \"FORM\"\n                                  })\n                      (dom/fieldset\n                        (dom/props {:name \"FORM\"\n                                    })\n                        (dom/legend\n                          (dom/text \"Create RFP\")\n                          (dom/props {:style {:text-align \"center\"}}))\n                        (dom/label (dom/props {:for \"dropdown\"}) (dom/text \"lutfen rfp categorinizi se\u00e7in:\" (dom/props {:style {:font-style \"none\"}})))\n                        (dom/select (dom/props {:id \"dropdown\"})\n                                    (dom/option (dom/props {:disabled \"true\" :selected \"false\"})\n                                                (dom/text \"\"))\n                                    (dom/option (dom/props {:value \"bilgisayar\"})\n                                                (dom/text \"Bilgisayar\"))\n                                    (dom/option (dom/props {:value \"seyahat\"})\n                                                (dom/text \"Seyahat\"))\n                                    (dom/option (dom/props {:value \"konaklama\"})\n                                                (dom/text \"Konaklama\"))\n                                    (dom/on \"change\" (fn [] (swap! !state assoc :category (keyword \"service\" (str (.-value dom/node))))))\n                                    )\n\n                        (dom/p (dom/text \"rfp title:\" (dom/props {:class \"text\"\n                                                                  }))\n                               (ui/input name\n                                         (e/fn [v] (swap! !state assoc :name v))\n                                         (dom/props {:style {:name \"name\"}})\n                                         ))\n                        (dom/p (dom/text \"item amount:\" (dom/props {:class \"text\"\n                                                                    }))\n                               (ui/input item-amount\n                                         (e/fn [v] (swap! !state assoc :item-amount v))\n                                         (dom/props {:style {:name \"item-amount\"}})\n                                         ))\n                        (dom/p (dom/text \"explanation:\" (dom/props {:class \"text\"\n                                                                    }))\n                               (ui/input explanation\n                                         (e/fn [v] (swap! !state assoc :explanation v))\n                                         (dom/props {:style {:name \"explanation\"}})\n                                         ))\n                        (dom/p (dom/text \"Releated Project Id:\" (dom/props {:class \"text\"\n                                                                            }))\n                               (ui/input project-id\n                                         (e/fn [v] (swap! !state assoc :project-id v))\n                                         (dom/props {:style {:name \"project-id\"}})\n                                         ))\n\n                        (ui/button\n                          (e/fn []\n                                (e/server (d/transact conn {:tx-data [{:rfp/id          (e/server (get-free-rfp-id db))\n                                                                       :rfp/category    [category]\n                                                                       :rfp/name        (str name)\n                                                                       :rfp/item-amount (read-string item-amount)\n                                                                       :rfp/explanation (str explanation)\n                                                                       :rfp/project-id  [:project/id (read-string project-id)]\n                                                                       }\n                                                                      ]})\n                                          )\n                                )\n                          (dom/on \"click\" (fn [_] (swap! !state assoc :btn1-is-clicked true)))\n                          (dom/text \"Create\")\n                          (dom/props {:type  \"button\"\n                                      :class \"create-project\"\n                                      :name  \"signup-button\"\n                                      :style {:text-align \"center\"}\n                                      }))\n\n\n                        (if btn-state\n                          (case (clojure.string/blank? (e/server\n                                                         (binding [conn @(requiring-resolve 'user/datomic-conn)]\n                                                           (binding [db (d/db conn)]\n                                                             (ffirst (d/q\n                                                                       '[:find ?e\n                                                                         :in $ ?id\n                                                                         :where\n                                                                         [?e :rfp/id ?id]]\n                                                                       db rfp-id))\n                                                             )\n                                                           )\n                                                         ))\n                            false ((.setTimeout js/window #(set! js/window.location.href \"http://localhost:8080/(app.poms-04-sif-20230907!sif-page)\") 2000)\n                                   (swap! !state assoc :login-info \"RFP created, redirecting...\")\n                                   (swap! !state assoc :btn1-is-clicked false)\n                                   (swap! !state assoc :name \"\")\n                                   (swap! !state assoc :item-amount \"\")\n                                   (swap! !state assoc :explanation \"\")\n                                   (swap! !state assoc :project-id \"\"))\n                            true ((swap! !state assoc :login-info \"Something went wrong!!\")\n                                  (swap! !state assoc :btn1-is-clicked false))\n                            )\n                          )\n\n                        (dom/p (dom/text login-info\n                                         (dom/props {:class      \"login-info\"\n                                                     :name       \"login-text\"\n                                                     :text-align \"center\"\n                                                     })))\n\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n\n"]}